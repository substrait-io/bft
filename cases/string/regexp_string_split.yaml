function: regexp_string_split
cases:
  - group:
      id: lazy_matching
      description: Examples with lazy matching
    args:
      - value: 'Hello'
        type: string
      - value: 'Hel+?'
        type: string
    result:
      value: ['', 'lo']
      type: string
  - group: lazy_matching
    args:
      - value: 'Hello'
        type: string
      - value: 'Hel+'
        type: string
    result:
      value: ['', 'o']
      type: string
  - group:
      id: greedy_matching
      description: Examples with greedy matching
    args:
      - value: 'HHHelloooo'
        type: string
      - value: 'Hel+'
        type: string
    result:
      value: ['HH', 'oooo']
      type: string
  - group:
      id: null_input
      description: Examples with null as input
    args:
      - value: null
        type: string
      - value: 'Hel+'
        type: string
    result:
      value: null
      type: string
  - group:
      id: position_anchors
      description: Examples with position anchors
    args:
      - value: 'abcdefg'
        type: string
      - value: '\Aabc'
        type: string
    result:
      value: ['', 'defg']
      type: string
  - group: position_anchors
    args:
      - value: 'abcdefg'
        type: string
      - value: 'efg$'
        type: string
    result:
      value: ['abcd', '']
      type: string
  - group:
      id: metacharacters
      description: Examples with metacharacters
    args:
      - value: 'abc1abc'
        type: string
      - value: '\d'
        type: string
    result:
      value: ['abc', 'abc']
      type: string
  - group: metacharacters
    args:
      - value: '111a111'
        type: string
      - value: '\D'
        type: string
    result:
      value: ['111', '111']
      type: string
  - group: metacharacters
    args:
      - value: 'abc def'
        type: string
      - value: '\s'
        type: string
    result:
      value: ['abc', 'def']
      type: string
  - group: metacharacters
    args:
      - value: 'a bcdef'
        type: string
      - value: '\S'
        type: string
    result:
      value: ['', ' ', '', '', '', '', '']
      type: string
  - group: metacharacters
    args:
      - value: ' abcdef'
        type: string
      - value: '\w'
        type: string
    result:
      value: [' ', '', '', '', '', '', '']
      type: string
  - group: metacharacters
    args:
      - value: 'a bcdef'
        type: string
      - value: '\W'
        type: string
    result:
      value: ['a', 'bcdef']
      type: string
  - group:
      id: occurrence_indicator
      description: Examples with occurrence indicators
    args:
      - value: 'abc123abc'
        type: string
      - value: '[0-9]+'
        type: string
    result:
      value: ['abc', 'abc']
      type: string
  - group: occurrence_indicator
    args:
      - value: 'abc123abc'
        type: string
      - value: '[bc]'
        type: string
    result:
      value: ['a', '', '123a', '', '']
      type: string
  - group: occurrence_indicator
    args:
      - value: 'abcde'
        type: string
      - value: '(.*)c'
        type: string
    result:
      value: ['', 'de']
      type: string
  - group: occurrence_indicator
    args:
      - value: 'abbbbc'
        type: string
      - value: '[b]{2,3}'
        type: string
    result:
      value: ['a', 'bc']
      type: string
