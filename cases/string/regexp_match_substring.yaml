function: regexp_match_substring
cases:
  - group:
      id: basic
      description: Basic examples without any special cases
    args:
      - value: 'foobarboopzoo'
        type: string
      - value: 'o{1,}'
        type: string
    result:
      value: "oo"
      type: string
  - group: basic
    args:
      - value: 'foobarboopzoo'
        type: string
      - value: 'o{1}'
        type: string
    result:
      value: "o"
      type: string
  - group: basic
    args:
      - value: 'abcabcacb'
        type: string
      - value: '[bc]'
        type: string
    result:
      value: "b"
      type: sting
  - group: basic
    args:
      - value: 'abcdefghi'
        type: string
      - value: '(.*)c'
        type: string
    result:
      value: "abc"
      type: string
  - group: basic
    args:
      - value: 'abcdefghi'
        type: string
      - value: '(.*)c?'
        type: string
    result:
      value: "abcdefghi"
      type: string
  - group:
      id: null_input
      description: Examples with null as input
    args:
      - value: 'Hello'
        type: string
      - value: null
        type: string
    result:
      value: null
      type: string
  - group: null_input
    args:
      - value: null
        type: string
      - value: ' '
        type: string
    result:
      value: null
      type: string
  - group:
      id: metacharacters
      description: Examples with metacharacters
    args:
      - value: 'abc1abc'
        type: string
      - value: '\d'
        type: string
    result:
      value: "1"
      type: string
  - group: metacharacters
    args:
      - value: 'abc1abc'
        type: string
      - value: '\D'
        type: string
    result:
      value: "a"
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi'
        type: string
      - value: '\s'
        type: string
    result:
      value: " "
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi'
        type: string
      - value: '\S'
        type: string
    result:
      value: "a"
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi'
        type: string
      - value: '\S+'
        type: string
    result:
      value: "abc"
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi'
        type: string
      - value: '\w'
        type: string
    result:
      value: "a"
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi'
        type: string
      - value: '\w+'
        type: string
    result:
      value: "abc"
      type: string
  - group: metacharacters
    args:
      - value: 'abc def ghi,'
        type: string
      - value: '\W'
        type: string
    result:
      value: " "
      type: string
  - group:
      id: lookahead
      description: Examples with lookahead
    args:
      - value: '100 dollars'
        type: string
      - value: '\d+(?= dollars)'
        type: string
    options:
      lookaround: TRUE
    result:
      value: '100'
      type: string
  - group:
      id: negative_lookahead
      description: Examples with negative lookahead
    args:
      - value: '100 pesos'
        type: string
      - value: '\d+(?!\d| dollars)'
        type: string
    options:
      lookaround: TRUE
    result:
      value: '100'
      type: string
  - group:
      id: lookbehind
      description: Examples with lookbehind
    args:
      - value: 'USD100'
        type: string
      - value: '(?<=USD)\d{3}'
        type: string
    options:
      lookaround: TRUE
    result:
      value: '100'
      type: string
  - group:
      id: negative_lookbehind
      description: Examples with negative lookbehind
    args:
      - value: 'JPY100'
        type: string
      - value: '\d{3}(?<!USD\d{3})'
        type: string
    options:
      lookaround: TRUE
    result:
      value: '100'
      type: string
